/*!
 * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md.
 */(()=>{"use strict";const e={tokenUrl:"https://33333.cke-cs.com/token/dev/ijrDsqFix838Gh3wGO3F77FSW94BwcLXprJ4APSp3XQ26xsUHTi0jcb1hoBt",uploadUrl:"https://33333.cke-cs.com/easyimage/upload/"},t=(e,{writer:t})=>{const i=t.createElement("sideCard"),d=(e=>{for(const t of["default","alternate"])if(e.hasClass(`side-card-${t}`))return t;return"default"})(e);t.setAttribute("cardType",d,i);const n=[...e.getChildren()].find((e=>e.is("element","div")&&e.hasClass("side-card-url")));return n&&t.setAttribute("cardURL",n.getChild(0).data,i),i},i=(e,t,i,d)=>{const n=i.ownerDocument,s=createElement(n,"button",{},[e]);return s.addEventListener("click",(()=>{d.model.change(t)})),i.appendChild(s),s},d=(e,{asWidget:t})=>(d,{writer:n,consumable:s,mapper:r})=>{const a=d.getAttribute("cardType")||"default",o=n.createContainerElement("aside",{class:`side-card side-card-${a}`});for(const e of d.getChildren()){const i=n.createEditableElement("div");e.is("element","sideCardTitle")?n.addClass("side-card-title",i):n.addClass("side-card-section",i),s.consume(e,"insert"),r.bindElements(e,i),t&&toWidgetEditable(i,n),n.insert(n.createPositionAt(o,"end"),i)}const c=d.getAttribute("cardURL");if(c){const e=n.createRawElement("div",{class:"side-card-url"},(function(e){e.innerText=`URL: "${c}"`}));n.insert(n.createPositionAt(o,"end"),e)}if(t){const t=n.createRawElement("div",{class:"side-card-actions",contenteditable:"false","data-cke-ignore-events":"true"},((e,t)=>function(d){i("Set URL",(e=>{const i=prompt("Set URL",t.getAttribute("cardURL")||"");e.setAttribute("cardURL",i,t)}),d,e);const n="default"===t.getAttribute("cardType")?"alternate":"default";i("Change type",(e=>{e.setAttribute("cardType",n,t)}),d,e);const s=t.childCount,r=i("Add section",(e=>{e.insertElement("sideCardSection",t,"end")}),d,e);s>4&&r.setAttribute("disabled","disabled");const a=i("Remove section",(e=>{e.remove(t.getChild(s-1))}),d,e);s<3&&a.setAttribute("disabled","disabled")})(e,d));n.insert(n.createPositionAt(o,"end"),t),toWidget(o,n,{widgetLabel:"Side card",hasSelectionHandle:!0})}return o};class n extends Command{refresh(){const e=this.editor.model,t=findOptimalInsertionRange(e.document.selection,e);this.isEnabled=e.schema.checkChild(t.start,"sideCard")}execute(){const e=this.editor.model,t=e.document.selection,i=findOptimalInsertionRange(t,e);e.change((t=>{const d=t.createElement("sideCard",{cardType:"default"}),n=t.createElement("sideCardTitle"),s=t.createElement("sideCardSection"),r=t.createElement("paragraph");t.insert(n,d,0),t.insert(s,d,1),t.insert(r,s,0),e.insertContent(d,i),t.setSelection(t.createPositionAt(n,0))}))}}class s extends Plugin{constructor(e){super(e),this._defineSchema(),this._defineConversion(),e.commands.add("insertCard",new n(e)),this._defineUI()}_defineConversion(){const e=this.editor,i=e.conversion;i.for("upcast").elementToElement({view:{name:"aside",classes:["side-card"]},model:t}).elementToElement({view:{name:"div",classes:["side-card-title"]},model:"sideCardTitle"}).elementToElement({view:{name:"div",classes:["side-card-section"]},model:"sideCardSection"}),i.for("editingDowncast").elementToElement({model:"sideCard",view:d(e,{asWidget:!0}),triggerBy:{attributes:["cardType","cardURL"],children:["sideCardSection"]}}),i.for("dataDowncast").elementToElement({model:"sideCard",view:d(e,{asWidget:!1})})}_defineSchema(){const e=this.editor.model.schema;e.register("sideCard",{allowWhere:"$block",isObject:!0,allowAttributes:["cardType","cardURL"]}),e.addChildCheck(((e,t)=>{if([...e.getNames()].includes("sideCard")&&"sideCard"===t.name)return!1})),e.register("sideCardTitle",{isLimit:!0,allowIn:"sideCard"}),e.extend("$text",{allowIn:"sideCardTitle"}),e.addAttributeCheck((e=>{if(e.endsWith("sideCardTitle $text"))return!1})),e.register("sideCardSection",{isLimit:!0,allowIn:"sideCard",allowContentOf:"$root"})}_defineUI(){const e=this.editor;e.ui.componentFactory.add("insertCard",(t=>{const i=new ButtonView(t),d=e.commands.get("insertCard");return i.set({withText:!0,icon:!1,label:"Insert card"}),i.bind("isEnabled").to(d),i.on("execute",(()=>{e.execute("insertCard"),e.editing.view.focus()})),i}))}}ClassicEditor.create(document.querySelector("#editor-element-reconversion"),{cloudServices:e,extraPlugins:[s],image:{toolbar:["imageStyle:inline","imageStyle:block","imageStyle:side","|","toggleImageCaption","imageTextAlternative"]},table:{contentToolbar:["tableColumn","tableRow","mergeTableCells"]},toolbar:{items:["heading","|","bold","italic","|","insertCard"]},ui:{viewportOffset:{top:window.getViewportTopOffsetConfig()}}}).then((e=>{window.editor=e})).catch((e=>{console.error(e)}))})();
{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./packages/ckeditor5-cloud-services/tests/_utils/cloud-services-config.js","webpack:///./node_modules/umberto/source/ckeditor5/19.1.1/_snippets/framework/extending-content-custom-figure-attributes.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CS_CONFIG","tokenUrl","uploadUrl","setupCustomClassConversion","viewElementName","modelElementName","editor","model","schema","extend","allowAttributes","conversion","for","add","upcastCustomClasses","priority","dispatcher","on","evt","data","conversionApi","modelElement","item","viewFigure","mapper","toViewElement","writer","addClass","getAttribute","downcastCustomClasses","setupCustomAttributeConversion","viewAttribute","modelAttribute","viewItem","modelRange","start","nodeAfter","setAttribute","upcastAttribute","viewElement","Array","from","createRangeIn","getItems","find","is","findViewChild","downcastAttribute","elementName","currentAttributeValue","push","getClassNames","ClassicEditor","document","querySelector","cloudServices","extraPlugins","this","toolbar","viewportTopOffset","window","getViewportTopOffsetConfig","then","catch","err","console","error","stack"],"mappings":"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","file":"framework/extending-content-custom-figure-attributes/snippet.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 475);\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n// WARNING: The URLs below should not be used for any other purpose than Easy Image plugin development.\n// Images uploaded using the testing token service may be deleted automatically at any moment.\n// If you would like to try the Easy Image service, please sign up for a free trial (https://ckeditor.com/ckeditor-cloud-services/).\n// Images uploaded during the free trial will not be deleted for the whole trial period and additionally the trial service can be converted\n// into a subscription at any moment, allowing you to preserve all uploaded images.\n\nexport const TOKEN_URL = 'https://33333.cke-cs.com/token/dev/ijrDsqFix838Gh3wGO3F77FSW94BwcLXprJ4APSp3XQ26xsUHTi0jcb1hoBt';\n\nexport const UPLOAD_URL = 'https://33333.cke-cs.com/easyimage/upload/';\n\nexport const CS_CONFIG = {\n\ttokenUrl: TOKEN_URL,\n\tuploadUrl: UPLOAD_URL\n};\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals ClassicEditor, console, window, document */\n\nimport { CS_CONFIG } from '@ckeditor/ckeditor5-cloud-services/tests/_utils/cloud-services-config';\n\n/**\n * Plugin that converts custom attributes for elements that are wrapped in <figure> in the view.\n */\nclass CustomFigureAttributes {\n\t/**\n\t * Plugin's constructor - receives editor instance on creation.\n\t */\n\tconstructor( editor ) {\n\t\t// Save reference to the editor.\n\t\tthis.editor = editor;\n\t}\n\n\t/**\n\t * Setups conversion and extends table & image features schema.\n\t *\n\t * Schema extending must be done in the “afterInit()” call because plugins define their schema in “init()“.\n\t */\n\tafterInit() {\n\t\tconst editor = this.editor;\n\n\t\t// Define on which elements the CSS classes should be preserved:\n\t\tsetupCustomClassConversion( 'img', 'image', editor );\n\t\tsetupCustomClassConversion( 'table', 'table', editor );\n\n\t\teditor.conversion.for( 'upcast' ).add( upcastCustomClasses( 'figure' ), { priority: 'low' } );\n\n\t\t// Define custom attributes that should be preserved.\n\t\tsetupCustomAttributeConversion( 'img', 'image', 'id', editor );\n\t\tsetupCustomAttributeConversion( 'table', 'table', 'id', editor );\n\t}\n}\n\n/**\n * Sets up a conversion that preservers classes on <img> and <table> elements.\n */\nfunction setupCustomClassConversion( viewElementName, modelElementName, editor ) {\n\t// The 'customClass' attribute will store custom classes from the data in the model so schema definitions allow this attribute.\n\teditor.model.schema.extend( modelElementName, { allowAttributes: [ 'customClass' ] } );\n\n\t// Define upcast converters for the <img> and <table> elements with a \"low\" priority so they are run after the default converters.\n\teditor.conversion.for( 'upcast' ).add( upcastCustomClasses( viewElementName ), { priority: 'low' } );\n\n\t// Define downcast converters for a model element with a \"low\" priority so they are run after the default converters.\n\teditor.conversion.for( 'downcast' ).add( downcastCustomClasses( modelElementName ), { priority: 'low' } );\n}\n\n/**\n * Sets up a conversion for a custom attribute on view elements contained inside a <figure>.\n *\n * This method:\n * - Adds proper schema rules.\n * - Adds an upcast converter.\n * - Adds a downcast converter.\n */\nfunction setupCustomAttributeConversion( viewElementName, modelElementName, viewAttribute, editor ) {\n\t// Extend the schema to store an attribute in the model.\n\tconst modelAttribute = `custom${ viewAttribute }`;\n\n\teditor.model.schema.extend( modelElementName, { allowAttributes: [ modelAttribute ] } );\n\n\teditor.conversion.for( 'upcast' ).add( upcastAttribute( viewElementName, viewAttribute, modelAttribute ) );\n\teditor.conversion.for( 'downcast' ).add( downcastAttribute( modelElementName, viewElementName, viewAttribute, modelAttribute ) );\n}\n\n/**\n * Creates an upcast converter that will pass all classes from the view element to the model element.\n */\nfunction upcastCustomClasses( elementName ) {\n\treturn dispatcher => dispatcher.on( `element:${ elementName }`, ( evt, data, conversionApi ) => {\n\t\tconst viewItem = data.viewItem;\n\t\tconst modelRange = data.modelRange;\n\n\t\tconst modelElement = modelRange && modelRange.start.nodeAfter;\n\n\t\tif ( !modelElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// The upcast conversion picks up classes from the base element and from the <figure> element so it should be extensible.\n\t\tconst currentAttributeValue = modelElement.getAttribute( 'customClass' ) || [];\n\n\t\tcurrentAttributeValue.push( ...viewItem.getClassNames() );\n\n\t\tconversionApi.writer.setAttribute( 'customClass', currentAttributeValue, modelElement );\n\t} );\n}\n\n/**\n * Creates a downcast converter that adds classes defined in the `customClass` attribute to a given view element.\n *\n * This converter expects that the view element is nested in a <figure> element.\n */\nfunction downcastCustomClasses( modelElementName ) {\n\treturn dispatcher => dispatcher.on( `insert:${ modelElementName }`, ( evt, data, conversionApi ) => {\n\t\tconst modelElement = data.item;\n\n\t\tconst viewFigure = conversionApi.mapper.toViewElement( modelElement );\n\n\t\tif ( !viewFigure ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// The code below assumes that classes are set on the <figure> element...\n\t\tconversionApi.writer.addClass( modelElement.getAttribute( 'customClass' ), viewFigure );\n\n\t\t// ... but if you prefer the classes to be passed to the <img> element, find the view element inside the <figure>:\n\t\t//\n\t\t// const viewElement = findViewChild( viewFigure, viewElementName, conversionApi );\n\t\t//\n\t\t// conversionApi.writer.addClass( modelElement.getAttribute( 'customClass' ), viewElement );\n\t} );\n}\n\n/**\n * Helper method that searches for a given view element in all children of the model element.\n *\n * @param {module:engine/view/item~Item} viewElement\n * @param {String} viewElementName\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi\n * @return {module:engine/view/item~Item}\n */\nfunction findViewChild( viewElement, viewElementName, conversionApi ) {\n\tconst viewChildren = Array.from( conversionApi.writer.createRangeIn( viewElement ).getItems() );\n\n\treturn viewChildren.find( item => item.is( viewElementName ) );\n}\n\n/**\n * Returns the custom attribute upcast converter.\n */\nfunction upcastAttribute( viewElementName, viewAttribute, modelAttribute ) {\n\treturn dispatcher => dispatcher.on( `element:${ viewElementName }`, ( evt, data, conversionApi ) => {\n\t\tconst viewItem = data.viewItem;\n\t\tconst modelRange = data.modelRange;\n\n\t\tconst modelElement = modelRange && modelRange.start.nodeAfter;\n\n\t\tif ( !modelElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconversionApi.writer.setAttribute( modelAttribute, viewItem.getAttribute( viewAttribute ), modelElement );\n\t} );\n}\n\n/**\n * Returns the custom attribute downcast converter.\n */\nfunction downcastAttribute( modelElementName, viewElementName, viewAttribute, modelAttribute ) {\n\treturn dispatcher => dispatcher.on( `insert:${ modelElementName }`, ( evt, data, conversionApi ) => {\n\t\tconst modelElement = data.item;\n\n\t\tconst viewFigure = conversionApi.mapper.toViewElement( modelElement );\n\t\tconst viewElement = findViewChild( viewFigure, viewElementName, conversionApi );\n\n\t\tif ( !viewElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconversionApi.writer.setAttribute( viewAttribute, modelElement.getAttribute( modelAttribute ), viewElement );\n\t} );\n}\n\nClassicEditor\n\t.create( document.querySelector( '#snippet-custom-figure-attributes' ), {\n\t\tcloudServices: CS_CONFIG,\n\t\textraPlugins: [ CustomFigureAttributes ],\n\t\ttoolbar: {\n\t\t\tviewportTopOffset: window.getViewportTopOffsetConfig()\n\t\t}\n\t} )\n\t.then( editor => {\n\t\twindow.editor = editor;\n\t} )\n\t.catch( err => {\n\t\tconsole.error( err.stack );\n\t} );\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/umberto/source/ckeditor5/18.0.0/_snippets/features/word-count-update.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","container","document","querySelector","progressCircle","charactersBox","wordsBox","circleCircumference","Math","floor","PI","getAttribute","sendButton","addEventListener","window","alert","BalloonEditor","toolbar","items","viewportTopOffset","getViewportTopOffsetConfig","placeholder","table","contentToolbar","wordCount","onUpdate","stats","charactersProgress","characters","isLimitExceeded","isCloseToLimit","maxCharacters","circleDashArray","min","setAttribute","textContent","words","classList","toggle","toggleAttribute","catch","err","console","error","stack"],"mappings":"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","file":"features/word-count-update/snippet.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 438);\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* global window, document, console, BalloonEditor */\n\nconst maxCharacters = 120;\nconst container = document.querySelector( '.demo-update' );\nconst progressCircle = document.querySelector( '.demo-update__chart__circle' );\nconst charactersBox = document.querySelector( '.demo-update__chart__characters' );\nconst wordsBox = document.querySelector( '.demo-update__words' );\nconst circleCircumference = Math.floor( 2 * Math.PI * progressCircle.getAttribute( 'r' ) );\nconst sendButton = document.querySelector( '.demo-update__send' );\n\nsendButton.addEventListener( 'click', () => {\n\twindow.alert( 'Post sent!' ); // eslint-disable-line no-alert\n} );\n\nBalloonEditor\n\t.create( document.querySelector( '#demo-update__editor' ), {\n\t\ttoolbar: {\n\t\t\titems: [\n\t\t\t\t'heading',\n\t\t\t\t'|',\n\t\t\t\t'bold',\n\t\t\t\t'italic',\n\t\t\t\t'bulletedList',\n\t\t\t\t'numberedList',\n\t\t\t\t'|',\n\t\t\t\t'outdent',\n\t\t\t\t'indent',\n\t\t\t\t'|',\n\t\t\t\t'blockQuote',\n\t\t\t\t'link',\n\t\t\t\t'|',\n\t\t\t\t'mediaEmbed',\n\t\t\t\t'insertTable',\n\t\t\t\t'|',\n\t\t\t\t'undo',\n\t\t\t\t'redo'\n\t\t\t],\n\t\t\tviewportTopOffset: window.getViewportTopOffsetConfig()\n\t\t},\n\t\tplaceholder: 'Text of the post',\n\t\ttable: {\n\t\t\tcontentToolbar: [ 'tableColumn', 'tableRow', 'mergeTableCells' ]\n\t\t},\n\t\twordCount: {\n\t\t\tonUpdate: stats => {\n\t\t\t\tconst charactersProgress = stats.characters / maxCharacters * circleCircumference;\n\t\t\t\tconst isLimitExceeded = stats.characters > maxCharacters;\n\t\t\t\tconst isCloseToLimit = !isLimitExceeded && stats.characters > maxCharacters * .8;\n\t\t\t\tconst circleDashArray = Math.min( charactersProgress, circleCircumference );\n\n\t\t\t\t// Set the stroke of the circle to show how many characters were typed.\n\t\t\t\tprogressCircle.setAttribute( 'stroke-dasharray', `${ circleDashArray },${ circleCircumference }` );\n\n\t\t\t\t// Display the number of characters in the progress chart. When the limit is exceeded,\n\t\t\t\t// display how many characters should be removed.\n\t\t\t\tif ( isLimitExceeded ) {\n\t\t\t\t\tcharactersBox.textContent = `-${ stats.characters - maxCharacters }`;\n\t\t\t\t} else {\n\t\t\t\t\tcharactersBox.textContent = stats.characters;\n\t\t\t\t}\n\n\t\t\t\twordsBox.textContent = `Words in the post: ${ stats.words }`;\n\n\t\t\t\t// If the content length is close to the characters limit, add a CSS class to warn the user.\n\t\t\t\tcontainer.classList.toggle( 'demo-update__limit-close', isCloseToLimit );\n\n\t\t\t\t// If the character limit is exceeded, add a CSS class that makes the content's background red.\n\t\t\t\tcontainer.classList.toggle( 'demo-update__limit-exceeded', isLimitExceeded );\n\n\t\t\t\t// If the character limit is exceeded, disable the send button.\n\t\t\t\tsendButton.toggleAttribute( 'disabled', isLimitExceeded );\n\t\t\t}\n\t\t}\n\t} )\n\t.catch( err => {\n\t\tconsole.error( err.stack );\n\t} );\n\n"],"sourceRoot":""}